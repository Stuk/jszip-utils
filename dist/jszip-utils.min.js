/*

JSZipUtils - A collection of cross-browser utilities to go along with JSZip.
<http://stuk.github.io/jszip-utils>

(c) 2014 Stuart Knightley, David Duponchel
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip-utils/master/LICENSE.markdown.

*/
!function(a){"object"==typeof exports?module.exports=a():"function"==typeof define&&define.amd?define(a):"undefined"!=typeof window?window.JSZipUtils=a():"undefined"!=typeof global?global.JSZipUtils=a():"undefined"!=typeof self&&(self.JSZipUtils=a())}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);throw new Error("Cannot find module '"+g+"'")}var j=c[g]={exports:{}};b[g][0].call(j.exports,function(a){var c=b[g][1][a];return e(c?c:a)},j,j.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";
// taken from jQuery
function d(){try{return new window.XMLHttpRequest}catch(a){}}function e(){try{return new window.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}}var f={};
// just use the responseText with xhr1, response with xhr2.
// The transformation doesn't throw away high-order byte (with responseText)
// because JSZip handles that case. If not used with JSZip, you may need to
// do it, see https://developer.mozilla.org/En/Using_XMLHttpRequest#Handling_binary_data
f._getBinaryFromXHR=function(a){
// for xhr.responseText, the 0xFF mask is applied by JSZip
return a.response||a.responseText};
// Create the request object
var g="undefined"!=typeof window&&window.ActiveXObject?/* Microsoft failed to properly
     * implement the XMLHttpRequest in IE7 (can't request local files),
     * so we use the ActiveXObject when it is available
     * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
     * we need a fallback.
     */
function(){return d()||e()}:
// For all other browsers, use the standard XMLHttpRequest object
d;f.getBinaryContent=function(a,b,c){/*
     * Here is the tricky part : getting the data.
     * In firefox/chrome/opera/... setting the mimeType to 'text/plain; charset=x-user-defined'
     * is enough, the result is in the standard xhr.responseText.
     * cf https://developer.mozilla.org/En/XMLHttpRequest/Using_XMLHttpRequest#Receiving_binary_data_in_older_browsers
     * In IE <= 9, we must use (the IE only) attribute responseBody
     * (for binary data, its content is different from responseText).
     * In IE 10, the 'charset=x-user-defined' trick doesn't work, only the
     * responseType will work :
     * http://msdn.microsoft.com/en-us/library/ie/hh673569%28v=vs.85%29.aspx#Binary_Object_upload_and_download
     *
     * I'd like to use jQuery to avoid this XHR madness, but it doesn't support
     * the responseType attribute : http://bugs.jquery.com/ticket/11461
     */
try{var d=g();d.open("GET",a,!0),c&&d.setRequestHeader("Authorization","Basic "+c),
// recent browsers
"responseType"in d&&(d.responseType="arraybuffer"),
// older browser
d.overrideMimeType&&d.overrideMimeType("text/plain; charset=x-user-defined"),d.onreadystatechange=function(c){var e,g;
// use `xhr` and not `this`... thanks IE
if(4===d.readyState)if(200===d.status||0===d.status){e=null,g=null;try{e=f._getBinaryFromXHR(d)}catch(h){g=new Error(h)}b(g,e)}else b(new Error("Ajax error for "+a+" : "+this.status+" "+this.statusText),null)},d.send()}catch(e){b(new Error(e),null)}},
// export
b.exports=f},{}]},{},[1])(1)});